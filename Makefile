#############################################################################
# Makefile for building: EpilogFilter
# Generated by qmake (2.01a) (Qt 4.5.3) on: Mon Dec 13 05:07:26 2010
# Project:  epilogfilter.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile epilogfilter.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -Dcimg_display=0 -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lcups -lQtGui -L/usr/lib64 -L/usr/X11R6/lib64 -pthread -lpng -lfreetype -lSM -lICE -pthread -pthread -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = objects/

####### Files

SOURCES       = src/DeonionFilter.cpp \
		src/Driver.cpp \
		src/EpilogFilter.cpp \
		src/FilterChain.cpp \
		src/FindPolylinesFilter.cpp \
		src/Joint.cpp \
		src/LaserJob.cpp \
		src/LineSegment.cpp \
		src/OnionSkin.cpp \
		src/Polygon.cpp \
		src/Polyline.cpp \
		src/RasterPass.cpp \
		src/Filter.cpp \
		src/SerializeOnionSkinsFilter.cpp \
		src/SplitIntersectionsFilter.cpp \
		src/TAFilter.cpp \
		src/TilePartitioner.cpp \
		src/TPFilter.cpp \
		src/VectorPass.cpp \
		src/laser_config.cpp \
		src/eps_converter.cpp 
OBJECTS       = objects/DeonionFilter.o \
		objects/Driver.o \
		objects/EpilogFilter.o \
		objects/FilterChain.o \
		objects/FindPolylinesFilter.o \
		objects/Joint.o \
		objects/LaserJob.o \
		objects/LineSegment.o \
		objects/OnionSkin.o \
		objects/Polygon.o \
		objects/Polyline.o \
		objects/RasterPass.o \
		objects/Filter.o \
		objects/SerializeOnionSkinsFilter.o \
		objects/SplitIntersectionsFilter.o \
		objects/TAFilter.o \
		objects/TilePartitioner.o \
		objects/TPFilter.o \
		objects/VectorPass.o \
		objects/laser_config.o \
		objects/eps_converter.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		epilogfilter.pro
QMAKE_TARGET  = EpilogFilter
DESTDIR       = 
TARGET        = EpilogFilter

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: epilogfilter.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -unix -o Makefile epilogfilter.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile epilogfilter.pro

dist: 
	@$(CHK_DIR_EXISTS) objects/EpilogFilter1.0.0 || $(MKDIR) objects/EpilogFilter1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) objects/EpilogFilter1.0.0/ && $(COPY_FILE) --parents src/CImg.h src/DeonionFilter.h src/Driver.h src/EpilogFilter.h src/Filter.h src/FilterChain.h src/FindPolylinesFilter.h src/Joint.h src/Laser.h src/laser_config.h src/eps_converter.h src/LaserJob.h src/LaserPass.h src/VectorPass.h src/RasterPass.h src/LineSegment.h src/OnionSkin.h src/pjl.h src/Polygon.h src/Polyline.h src/Primitives.h src/Raster.h src/SerializeOnionSkinsFilter.h src/SplitIntersectionsFilter.h src/TAFilter.h src/TilePartitioner.h src/TPFilter.h objects/EpilogFilter1.0.0/ && $(COPY_FILE) --parents src/DeonionFilter.cpp src/Driver.cpp src/EpilogFilter.cpp src/FilterChain.cpp src/FindPolylinesFilter.cpp src/Joint.cpp src/LaserJob.cpp src/LineSegment.cpp src/OnionSkin.cpp src/Polygon.cpp src/Polyline.cpp src/RasterPass.cpp src/Filter.cpp src/SerializeOnionSkinsFilter.cpp src/SplitIntersectionsFilter.cpp src/TAFilter.cpp src/TilePartitioner.cpp src/TPFilter.cpp src/VectorPass.cpp src/laser_config.cpp src/eps_converter.cpp objects/EpilogFilter1.0.0/ && (cd `dirname objects/EpilogFilter1.0.0` && $(TAR) EpilogFilter1.0.0.tar EpilogFilter1.0.0 && $(COMPRESS) EpilogFilter1.0.0.tar) && $(MOVE) `dirname objects/EpilogFilter1.0.0`/EpilogFilter1.0.0.tar.gz . && $(DEL_FILE) -r objects/EpilogFilter1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

objects/DeonionFilter.o: src/DeonionFilter.cpp src/DeonionFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/VectorPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/DeonionFilter.o src/DeonionFilter.cpp

objects/Driver.o: src/Driver.cpp src/Driver.h \
		src/LaserJob.h \
		src/laser_config.h \
		src/Laser.h \
		src/LaserPass.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/pjl.h \
		src/FilterChain.h \
		src/Filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Driver.o src/Driver.cpp

objects/EpilogFilter.o: src/EpilogFilter.cpp src/laser_config.h \
		src/LaserJob.h \
		src/Laser.h \
		src/LaserPass.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/pjl.h \
		src/Driver.h \
		src/EpilogFilter.h \
		src/VectorPass.h \
		src/RasterPass.h \
		src/eps_converter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/EpilogFilter.o src/EpilogFilter.cpp

objects/FilterChain.o: src/FilterChain.cpp src/FilterChain.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/TPFilter.h \
		src/TAFilter.h \
		src/SplitIntersectionsFilter.h \
		src/FindPolylinesFilter.h \
		src/DeonionFilter.h \
		src/SerializeOnionSkinsFilter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/FilterChain.o src/FilterChain.cpp

objects/FindPolylinesFilter.o: src/FindPolylinesFilter.cpp src/FindPolylinesFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/VectorPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/FindPolylinesFilter.o src/FindPolylinesFilter.cpp

objects/Joint.o: src/Joint.cpp src/LineSegment.h \
		src/Joint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Joint.o src/Joint.cpp

objects/LaserJob.o: src/LaserJob.cpp src/LaserJob.h \
		src/laser_config.h \
		src/Laser.h \
		src/LaserPass.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/pjl.h \
		src/VectorPass.h \
		src/RasterPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/LaserJob.o src/LaserJob.cpp

objects/LineSegment.o: src/LineSegment.cpp src/LineSegment.h \
		src/Joint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/LineSegment.o src/LineSegment.cpp

objects/OnionSkin.o: src/OnionSkin.cpp src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/OnionSkin.o src/OnionSkin.cpp

objects/Polygon.o: src/Polygon.cpp src/LineSegment.h \
		src/Joint.h \
		src/Polygon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Polygon.o src/Polygon.cpp

objects/Polyline.o: src/Polyline.cpp src/LineSegment.h \
		src/Joint.h \
		src/Polyline.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Polyline.o src/Polyline.cpp

objects/RasterPass.o: src/RasterPass.cpp src/RasterPass.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/pjl.h \
		src/LaserJob.h \
		src/Laser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/RasterPass.o src/RasterPass.cpp

objects/Filter.o: src/Filter.cpp src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/RasterPass.h \
		src/VectorPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Filter.o src/Filter.cpp

objects/SerializeOnionSkinsFilter.o: src/SerializeOnionSkinsFilter.cpp src/SerializeOnionSkinsFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/VectorPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/SerializeOnionSkinsFilter.o src/SerializeOnionSkinsFilter.cpp

objects/SplitIntersectionsFilter.o: src/SplitIntersectionsFilter.cpp src/SplitIntersectionsFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/LaserJob.h \
		src/Laser.h \
		src/pjl.h \
		src/VectorPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/SplitIntersectionsFilter.o src/SplitIntersectionsFilter.cpp

objects/TAFilter.o: src/TAFilter.cpp src/TAFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/RasterPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/TAFilter.o src/TAFilter.cpp

objects/TilePartitioner.o: src/TilePartitioner.cpp src/TilePartitioner.h \
		src/Raster.h \
		src/CImg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/TilePartitioner.o src/TilePartitioner.cpp

objects/TPFilter.o: src/TPFilter.cpp src/TPFilter.h \
		src/Filter.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/RasterPass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/TPFilter.o src/TPFilter.cpp

objects/VectorPass.o: src/VectorPass.cpp src/VectorPass.h \
		src/LaserPass.h \
		src/laser_config.h \
		src/Raster.h \
		src/CImg.h \
		src/TilePartitioner.h \
		src/Primitives.h \
		src/OnionSkin.h \
		src/Polyline.h \
		src/LineSegment.h \
		src/Joint.h \
		src/pjl.h \
		src/LaserJob.h \
		src/Laser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/VectorPass.o src/VectorPass.cpp

objects/laser_config.o: src/laser_config.cpp src/laser_config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/laser_config.o src/laser_config.cpp

objects/eps_converter.o: src/eps_converter.cpp src/eps_converter.h \
		src/laser_config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/eps_converter.o src/eps_converter.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

