#############################################################################
# Makefile for building: ppm2pcl
# Generated by qmake (2.01a) (Qt 4.6.3) on: Tue Feb 22 12:24:25 2011
# Project:  ppm2pcl.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile ppm2pcl.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DCTRLCUT_VERSION=2011.02.22 -DUSE_GHOSTSCRIPT_API
CFLAGS        = -m64 -pipe -O2 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -DETLOG -DDEBUG=4 -O2 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)   -lgs -lcups 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = objects/

####### Files

SOURCES       = Driver.cpp \
		ppm2pcl.cpp \
		LaserJob.cpp \
		util/Eps.cpp \
		util/LaserConfig.cpp \
		vector/Cut.cpp \
		vector/Mesh.cpp \
		vector/Polyline.cpp \
		vector/Vertex.cpp \
		vector/Edge.cpp \
		vector/HPGLEncoder.cpp \
		vector/filters/Deonion.cpp \
		vector/filters/Explode.cpp \
		vector/filters/Join.cpp \
		vector/filters/Flat.cpp \
		tri_logger/tri_logger.cpp \
		raster/DownSample.cpp \
		raster/PclEncoder.cpp \
		raster/Raster.cpp 
OBJECTS       = objects/Driver.o \
		objects/ppm2pcl.o \
		objects/LaserJob.o \
		objects/Eps.o \
		objects/LaserConfig.o \
		objects/Cut.o \
		objects/Mesh.o \
		objects/Polyline.o \
		objects/Vertex.o \
		objects/Edge.o \
		objects/HPGLEncoder.o \
		objects/Deonion.o \
		objects/Explode.o \
		objects/Join.o \
		objects/Flat.o \
		objects/tri_logger.o \
		objects/DownSample.o \
		objects/PclEncoder.o \
		objects/Raster.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../boost.pri \
		../../ghostscript.pri \
		../../common.pri \
		../common.pri \
		common.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		ppm2pcl.pro
QMAKE_TARGET  = ppm2pcl
DESTDIR       = 
TARGET        = ppm2pcl

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ppm2pcl.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../boost.pri \
		../../ghostscript.pri \
		../../common.pri \
		../common.pri \
		common.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile ppm2pcl.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../../boost.pri:
../../ghostscript.pri:
../../common.pri:
../common.pri:
common.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile ppm2pcl.pro

dist: 
	@$(CHK_DIR_EXISTS) objects/ppm2pcl2011.02.22 || $(MKDIR) objects/ppm2pcl2011.02.22 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) objects/ppm2pcl2011.02.22/ && (cd `dirname objects/ppm2pcl2011.02.22` && $(TAR) ppm2pcl2011.02.22.tar ppm2pcl2011.02.22 && $(COMPRESS) ppm2pcl2011.02.22.tar) && $(MOVE) `dirname objects/ppm2pcl2011.02.22`/ppm2pcl2011.02.22.tar.gz . && $(DEL_FILE) -r objects/ppm2pcl2011.02.22


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

objects/Driver.o: Driver.cpp Driver.h \
		LaserJob.h \
		util/PJL.h \
		util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/HPGLEncoder.h \
		raster/Raster.h \
		util/2D.h \
		raster/DownSample.h \
		raster/MMapMatrix.h \
		raster/PclEncoder.h \
		vector/Cut.h \
		vector/Mesh.h \
		vector/filters/Filters.h \
		vector/filters/Explode.h \
		vector/filters/Join.h \
		vector/filters/Deonion.h \
		vector/filters/Flat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Driver.o Driver.cpp

objects/ppm2pcl.o: ppm2pcl.cpp raster/Raster.h \
		util/2D.h \
		raster/DownSample.h \
		raster/MMapMatrix.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		util/LaserConfig.h \
		LaserJob.h \
		util/PJL.h \
		vector/HPGLEncoder.h \
		raster/PclEncoder.h \
		Driver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/ppm2pcl.o ppm2pcl.cpp

objects/LaserJob.o: LaserJob.cpp LaserJob.h \
		util/PJL.h \
		util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/HPGLEncoder.h \
		raster/Raster.h \
		util/2D.h \
		raster/DownSample.h \
		raster/MMapMatrix.h \
		raster/PclEncoder.h \
		vector/Cut.h \
		vector/Mesh.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/LaserJob.o LaserJob.cpp

objects/Eps.o: util/Eps.cpp util/Eps.h \
		util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Eps.o util/Eps.cpp

objects/LaserConfig.o: util/LaserConfig.cpp util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/LaserConfig.o util/LaserConfig.cpp

objects/Cut.o: vector/Cut.cpp vector/Cut.h \
		vector/Mesh.h \
		vector/Vertex.h \
		vector/Edge.h \
		vector/Polyline.h \
		raster/DownSample.h \
		util/2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Cut.o vector/Cut.cpp

objects/Mesh.o: vector/Mesh.cpp vector/Mesh.h \
		vector/Vertex.h \
		vector/Edge.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Mesh.o vector/Mesh.cpp

objects/Polyline.o: vector/Polyline.cpp vector/Polyline.h \
		raster/DownSample.h \
		util/2D.h \
		vector/Edge.h \
		vector/Vertex.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Polyline.o vector/Polyline.cpp

objects/Vertex.o: vector/Vertex.cpp vector/Vertex.h \
		vector/Edge.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Vertex.o vector/Vertex.cpp

objects/Edge.o: vector/Edge.cpp vector/Edge.h \
		vector/Vertex.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Edge.o vector/Edge.cpp

objects/HPGLEncoder.o: vector/HPGLEncoder.cpp vector/HPGLEncoder.h \
		util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		LaserJob.h \
		util/PJL.h \
		raster/Raster.h \
		util/2D.h \
		raster/DownSample.h \
		raster/MMapMatrix.h \
		raster/PclEncoder.h \
		vector/Polyline.h \
		vector/Edge.h \
		vector/Vertex.h \
		vector/Cut.h \
		vector/Mesh.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/HPGLEncoder.o vector/HPGLEncoder.cpp

objects/Deonion.o: vector/filters/Deonion.cpp util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/Edge.h \
		vector/Vertex.h \
		vector/Polyline.h \
		raster/DownSample.h \
		util/2D.h \
		vector/Cut.h \
		vector/Mesh.h \
		vector/filters/Deonion.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Deonion.o vector/filters/Deonion.cpp

objects/Explode.o: vector/filters/Explode.cpp util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/Edge.h \
		vector/Vertex.h \
		vector/Cut.h \
		vector/Mesh.h \
		vector/filters/Explode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Explode.o vector/filters/Explode.cpp

objects/Join.o: vector/filters/Join.cpp util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/filters/Join.h \
		vector/Edge.h \
		vector/Vertex.h \
		vector/Polyline.h \
		raster/DownSample.h \
		util/2D.h \
		vector/Cut.h \
		vector/Mesh.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Join.o vector/filters/Join.cpp

objects/Flat.o: vector/filters/Flat.cpp util/Logger.h \
		tri_logger/tri_logger.hpp \
		vector/Cut.h \
		vector/Mesh.h \
		vector/Polyline.h \
		raster/DownSample.h \
		util/2D.h \
		vector/Edge.h \
		vector/filters/Flat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Flat.o vector/filters/Flat.cpp

objects/tri_logger.o: tri_logger/tri_logger.cpp tri_logger/tri_logger.hpp \
		tri_logger/nullstream.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/tri_logger.o tri_logger/tri_logger.cpp

objects/DownSample.o: raster/DownSample.cpp raster/DownSample.h \
		util/2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/DownSample.o raster/DownSample.cpp

objects/PclEncoder.o: raster/PclEncoder.cpp raster/PclEncoder.h \
		util/LaserConfig.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		util/PJL.h \
		util/2D.h \
		raster/Raster.h \
		raster/DownSample.h \
		raster/MMapMatrix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/PclEncoder.o raster/PclEncoder.cpp

objects/Raster.o: raster/Raster.cpp raster/Raster.h \
		util/2D.h \
		raster/DownSample.h \
		raster/MMapMatrix.h \
		util/Logger.h \
		tri_logger/tri_logger.hpp \
		raster/PPMFile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects/Raster.o raster/Raster.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

