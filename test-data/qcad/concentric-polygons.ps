%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.6.6 (Build 10J567) Quartz PS Context)
%%Title: (QCAD - [Print preview for concentric-polygons.dxf])
%%Creator: (QCAD: cgpdftops CUPS filter)
%%CreationDate: (Wednesday, January 12 2011 02:54:41 CET)
%%For: (Marius Kintel)
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(QCAD - [Print preview for concentric-polygons.dxf])def
/Creator(QCAD: cgpdftops CUPS filter)def
/CreationDate(Wednesday, January 12 2011 02:54:41 CET)def
/For(Marius Kintel)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
cg_md begin
bp
sdmtx
%%EndPageSetup
2 w
1 J
1 j
0.39881429 setgray
csq
0 0 595 842 rc
0.23999999 0 0 -0.23999999 0.25 842.40997 cm
247.74831 3237.0569 m
446.75009 3404.04 l
S
202.63831 2981.2261 m
247.74831 3237.0569 l
S
332.5274 2756.251 m
202.63831 2981.2261 l
S
576.63928 2667.4021 m
332.5274 2756.251 l
S
820.75098 2756.251 m
576.63928 2667.4021 l
S
950.6402 2981.2261 m
820.75098 2756.251 l
S
905.53009 3237.0569 m
950.6402 2981.2261 l
S
706.52838 3404.04 m
905.53009 3237.0569 l
S
446.75009 3404.04 m
706.52838 3404.04 l
S
291.56641 3225.24 m
458.5582 3392.2319 l
S
291.56641 2989.0779 m
291.56641 3225.24 l
S
458.5582 2822.0859 m
291.56641 2989.0779 l
S
694.72028 2822.0859 m
458.5582 2822.0859 l
S
861.71222 2989.0779 m
694.72028 2822.0859 l
S
861.71222 3225.24 m
861.71222 2989.0779 l
S
694.72028 3392.2319 m
861.71222 3225.24 l
S
458.5582 3392.2319 m
694.72028 3392.2319 l
S
337.8461 3214.249 m
470.3663 3380.4241 l
S
385.142 3007.031 m
337.8461 3214.249 l
S
576.63928 2914.811 m
385.142 3007.031 l
S
768.13647 3007.031 m
576.63928 2914.811 l
S
815.43237 3214.249 m
768.13647 3007.031 l
S
682.91217 3380.4241 m
815.43237 3214.249 l
S
470.3663 3380.4241 m
682.91217 3380.4241 l
S
387.70959 3204.998 m
482.17441 3368.615 l
S
482.17441 3041.3799 m
387.70959 3204.998 l
S
671.10413 3041.3799 m
482.17441 3041.3799 l
S
765.56891 3204.998 m
671.10413 3041.3799 l
S
671.10413 3368.615 m
765.56891 3204.998 l
S
482.17441 3368.615 m
671.10413 3368.615 l
S
442.8978 3199.585 m
493.98251 3356.8069 l
S
576.63928 3102.416 m
442.8978 3199.585 l
S
710.38068 3199.585 m
576.63928 3102.416 l
S
659.29602 3356.8069 m
710.38068 3199.585 l
S
493.98251 3356.8069 m
659.29602 3356.8069 l
S
505.79059 3203.302 m
505.79059 3344.999 l
S
647.48792 3203.302 m
505.79059 3203.302 l
S
647.48792 3344.999 m
647.48792 3203.302 l
S
505.79059 3344.999 m
647.48792 3344.999 l
S
576.63928 3230.9299 m
517.59882 3333.1909 l
S
635.67981 3333.1909 m
576.63928 3230.9299 l
S
517.59882 3333.1909 m
635.67981 3333.1909 l
S
0.25377062 setgray
CM
58.080002 64.079987 m
60.480003 64.079987 l
60.480003 66.47998 l
58.080002 66.47998 l
h
f
105.84 23.99999 m
108.24001 23.99999 l
108.24001 26.39999 l
105.84 26.39999 l
h
f
47.279999 125.52 m
49.68 125.52 l
49.68 127.92001 l
47.279999 127.92001 l
h
f
58.080002 64.079987 m
60.480003 64.079987 l
60.480003 66.47998 l
58.080002 66.47998 l
h
f
78.480003 179.52 m
80.880005 179.52 l
80.880005 181.92 l
78.480003 181.92 l
h
f
47.279999 125.52 m
49.68 125.52 l
49.68 127.92001 l
47.279999 127.92001 l
h
f
137.03999 200.88 m
139.44 200.88 l
139.44 203.28 l
137.03999 203.28 l
h
f
78.480003 179.52 m
80.880005 179.52 l
80.880005 181.92 l
78.480003 181.92 l
h
f
195.60001 179.52 m
198.00002 179.52 l
198.00002 181.92 l
195.60001 181.92 l
h
f
137.03999 200.88 m
139.44 200.88 l
139.44 203.28 l
137.03999 203.28 l
h
f
226.8 125.52 m
229.20001 125.52 l
229.20001 127.92001 l
226.8 127.92001 l
h
f
195.60001 179.52 m
198.00002 179.52 l
198.00002 181.92 l
195.60001 181.92 l
h
f
216 64.079987 m
218.39999 64.079987 l
218.39999 66.47998 l
216 66.47998 l
h
f
226.8 125.52 m
229.20001 125.52 l
229.20001 127.92001 l
226.8 127.92001 l
h
f
168.24001 23.99999 m
170.64001 23.99999 l
170.64001 26.39999 l
168.24001 26.39999 l
h
f
216 64.079987 m
218.39999 64.079987 l
218.39999 66.47998 l
216 66.47998 l
h
f
105.84 23.99999 m
108.24001 23.99999 l
108.24001 26.39999 l
105.84 26.39999 l
h
f
168.24001 23.99999 m
170.64001 23.99999 l
170.64001 26.39999 l
168.24001 26.39999 l
h
f
68.639999 66.959991 m
71.040001 66.959991 l
71.040001 69.359993 l
68.639999 69.359993 l
h
f
108.72 26.87999 m
111.12 26.87999 l
111.12 29.279989 l
108.72 29.279989 l
h
f
68.639999 123.6 m
71.040001 123.6 l
71.040001 126 l
68.639999 126 l
h
f
68.639999 66.959991 m
71.040001 66.959991 l
71.040001 69.359993 l
68.639999 69.359993 l
h
f
108.72 163.67999 m
111.12 163.67999 l
111.12 166.07999 l
108.72 166.07999 l
h
f
68.639999 123.6 m
71.040001 123.6 l
71.040001 126 l
68.639999 126 l
h
f
165.36 163.67999 m
167.75999 163.67999 l
167.75999 166.07999 l
165.36 166.07999 l
h
f
108.72 163.67999 m
111.12 163.67999 l
111.12 166.07999 l
108.72 166.07999 l
h
f
205.44 123.6 m
207.84 123.6 l
207.84 126 l
205.44 126 l
h
f
165.36 163.67999 m
167.75999 163.67999 l
167.75999 166.07999 l
165.36 166.07999 l
h
f
205.44 66.959991 m
207.84 66.959991 l
207.84 69.359993 l
205.44 69.359993 l
h
f
205.44 123.6 m
207.84 123.6 l
207.84 126 l
205.44 126 l
h
f
165.36 26.87999 m
167.75999 26.87999 l
167.75999 29.279989 l
165.36 29.279989 l
h
f
205.44 66.959991 m
207.84 66.959991 l
207.84 69.359993 l
205.44 69.359993 l
h
f
108.72 26.87999 m
111.12 26.87999 l
111.12 29.279989 l
108.72 29.279989 l
h
f
165.36 26.87999 m
167.75999 26.87999 l
167.75999 29.279989 l
165.36 29.279989 l
h
f
79.68 69.599991 m
82.080002 69.599991 l
82.080002 71.999992 l
79.68 71.999992 l
h
f
111.6 29.759991 m
114 29.759991 l
114 32.159992 l
111.6 32.159992 l
h
f
91.199997 119.28 m
93.599998 119.28 l
93.599998 121.68 l
91.199997 121.68 l
h
f
79.68 69.599991 m
82.080002 69.599991 l
82.080002 71.999992 l
79.68 71.999992 l
h
f
137.03999 141.60001 m
139.44 141.60001 l
139.44 144 l
137.03999 144 l
h
f
91.199997 119.28 m
93.599998 119.28 l
93.599998 121.68 l
91.199997 121.68 l
h
f
183.12 119.28 m
185.51999 119.28 l
185.51999 121.68 l
183.12 121.68 l
h
f
137.03999 141.60001 m
139.44 141.60001 l
139.44 144 l
137.03999 144 l
h
f
194.39999 69.599991 m
196.8 69.599991 l
196.8 71.999992 l
194.39999 71.999992 l
h
f
183.12 119.28 m
185.51999 119.28 l
185.51999 121.68 l
183.12 121.68 l
h
f
162.48 29.759991 m
164.87999 29.759991 l
164.87999 32.159992 l
162.48 32.159992 l
h
f
194.39999 69.599991 m
196.8 69.599991 l
196.8 71.999992 l
194.39999 71.999992 l
h
f
111.6 29.759991 m
114 29.759991 l
114 32.159992 l
111.6 32.159992 l
h
f
162.48 29.759991 m
164.87999 29.759991 l
164.87999 32.159992 l
162.48 32.159992 l
h
f
91.68 71.999992 m
94.079994 71.999992 l
94.079994 74.399994 l
91.68 74.399994 l
h
f
114.48 32.639992 m
116.88 32.639992 l
116.88 35.039989 l
114.48 35.039989 l
h
f
114.48 111.12 m
116.88 111.12 l
116.88 113.52 l
114.48 113.52 l
h
f
91.68 71.999992 m
94.079994 71.999992 l
94.079994 74.399994 l
91.68 74.399994 l
h
f
159.84 111.12 m
162.23999 111.12 l
162.23999 113.52 l
159.84 113.52 l
h
f
114.48 111.12 m
116.88 111.12 l
116.88 113.52 l
114.48 113.52 l
h
f
182.39999 71.999992 m
184.8 71.999992 l
184.8 74.399994 l
182.39999 74.399994 l
h
f
159.84 111.12 m
162.23999 111.12 l
162.23999 113.52 l
159.84 113.52 l
h
f
159.84 32.639992 m
162.23999 32.639992 l
162.23999 35.039989 l
159.84 35.039989 l
h
f
182.39999 71.999992 m
184.8 71.999992 l
184.8 74.399994 l
182.39999 74.399994 l
h
f
114.48 32.639992 m
116.88 32.639992 l
116.88 35.039989 l
114.48 35.039989 l
h
f
159.84 32.639992 m
162.23999 32.639992 l
162.23999 35.039989 l
159.84 35.039989 l
h
f
104.88 73.199989 m
107.28 73.199989 l
107.28 75.599991 l
104.88 75.599991 l
h
f
117.12 35.519989 m
119.52 35.519989 l
119.52 37.919987 l
117.12 37.919987 l
h
f
137.03999 96.479988 m
139.44 96.479988 l
139.44 98.87999 l
137.03999 98.87999 l
h
f
104.88 73.199989 m
107.28 73.199989 l
107.28 75.599991 l
104.88 75.599991 l
h
f
169.2 73.199989 m
171.59999 73.199989 l
171.59999 75.599991 l
169.2 75.599991 l
h
f
137.03999 96.479988 m
139.44 96.479988 l
139.44 98.87999 l
137.03999 98.87999 l
h
f
156.96001 35.519989 m
159.36002 35.519989 l
159.36002 37.919987 l
156.96001 37.919987 l
h
f
169.2 73.199989 m
171.59999 73.199989 l
171.59999 75.599991 l
169.2 75.599991 l
h
f
117.12 35.519989 m
119.52 35.519989 l
119.52 37.919987 l
117.12 37.919987 l
h
f
156.96001 35.519989 m
159.36002 35.519989 l
159.36002 37.919987 l
156.96001 37.919987 l
h
f
120 72.23999 m
122.39999 72.23999 l
122.39999 74.639992 l
120 74.639992 l
h
f
120 38.39999 m
122.39999 38.39999 l
122.39999 40.799992 l
120 40.799992 l
h
f
154.08 72.23999 m
156.48 72.23999 l
156.48 74.639992 l
154.08 74.639992 l
h
f
120 72.23999 m
122.39999 72.23999 l
122.39999 74.639992 l
120 74.639992 l
h
f
154.08 38.39999 m
156.48 38.39999 l
156.48 40.799992 l
154.08 40.799992 l
h
f
154.08 72.23999 m
156.48 72.23999 l
156.48 74.639992 l
154.08 74.639992 l
h
f
120 38.39999 m
122.39999 38.39999 l
122.39999 40.799992 l
120 40.799992 l
h
f
154.08 38.39999 m
156.48 38.39999 l
156.48 40.799992 l
154.08 40.799992 l
h
f
137.03999 65.759987 m
139.44 65.759987 l
139.44 68.159988 l
137.03999 68.159988 l
h
f
122.88 41.039989 m
125.28 41.039989 l
125.28 43.439991 l
122.88 43.439991 l
h
f
151.2 41.039989 m
153.59999 41.039989 l
153.59999 43.439991 l
151.2 43.439991 l
h
f
137.03999 65.759987 m
139.44 65.759987 l
139.44 68.159988 l
137.03999 68.159988 l
h
f
122.88 41.039989 m
125.28 41.039989 l
125.28 43.439991 l
122.88 43.439991 l
h
f
151.2 41.039989 m
153.59999 41.039989 l
153.59999 43.439991 l
151.2 43.439991 l
h
f
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF
